global:
  ccdApiGatewayIngress: http://${SERVICE_NAME}-ccd-api-gw
  ccdDefinitionStoreUrl: http://${SERVICE_NAME}-ccd-definition-store
  ccdUserProfileUrl: http://ccd-user-profile-api-aat.service.core-compute-aat.internal
  dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
  idamApiUrl: https://idam-api.aat.platform.hmcts.net
  idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
  s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
  postgresSecret: ${SERVICE_NAME}-postgresql
  postgresHostname: ${SERVICE_NAME}-postgresql
  postgresUsername: "javapostgres"
  amRoleAssignmentServiceUrl: http://am-role-assignment-service-aat.service.core-compute-aat.internal

java:
  environment:
    CHANGE_ID: ${CHANGE_ID}
    ELASTIC_SEARCH_HOSTS: "http://{{ .Release.Name }}-es-master:9200"
  postgresql:
    image:
      debug: true
    primary:
      initdb:
        scripts:
          init.sql: |-
            CREATE DATABASE "data-store" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
            CREATE DATABASE "definition-store" WITH OWNER = javapostgres ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
ccd:
  enabled: true
  ccd:
    adminWeb:
      enabled: true
    definitionImporter:
      enabled: false
    userProfile:
      enabled: false
    userProfileImporter:
      enabled: false
    s2s:
      enabled: false
    apiGatewayWeb:
      enabled: true
    ras:
      enabled: false
    elastic:
      enabled: true
  ccd-definition-store-api:
    java:
      devmemoryRequests: '1024Mi'
      devmemoryLimits: '2048Mi'
      devcpuRequests: '500m'
      autoscaling:
        maxReplicas: 1
      environment:
        DEFINITION_STORE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        DEFINITION_STORE_TX_TIMEOUT_DEFAULT: 360
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: "{{ .Release.Name }}-es-master"
        WELSH_TRANSLATION_ENABLED: false
        DEFINITION_STORE_DB_USERNAME: "{{ .Values.postgresql.auth.username}}"
        DEFINITION_STORE_DB_OPTIONS: ""
      secrets:
        DEFINITION_STORE_DB_PASSWORD:
          key: password
          disabled: false
      ingressHost: ccd-definition-store-${SERVICE_FQDN}
      keyVaults:
        ccd:
          secrets:
            - name: ccd-definition-s2s-secret
              alias: DEFINITION_STORE_IDAM_KEY
  ccd-data-store-api:
    java:
      image: 'hmctspublic.azurecr.io/ccd/data-store-api:pr-2496'
      imagePullPolicy: Always
      devmemoryRequests: '1524Mi'
      devmemoryLimits: '2048Mi'
      devcpuRequests: '500m'
      environment:
        DATA_STORE_DB_HOST: '{{ tpl .Values.global.postgresHostname $}}'
        DATA_STORE_DB_USERNAME: "{{ .Values.postgresql.auth.username}}"
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        DATA_STORE_CROSS_JURISDICTIONAL_ROLES: caseworker-caa,caseworker-approver
        HTTP_CLIENT_READ_TIMEOUT: '120000'
        HTTP_CLIENT_MAX_TOTAL: '300'
        HTTP_CLIENT_MAX_CLIENT_PER_ROUTE: '30'
        DATA_STORE_DB_MAX_POOL_SIZE: 80
        DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
        CCD_DOCUMENT_URL_PATTERN: ^https?://(((?:dm-store-aat\.service\.core-compute-aat\.internal(?::\d+)?)\/documents\/[A-Za-z0-9-]+(?:\/binary)?))
        POC_APIS_URL: https://${SERVICE_FQDN}
        DATA_STORE_S2S_AUTHORISED_SERVICES: "ccd_data,ccd_gw,ccd_ps,probate_backend,divorce_ccd_submission,sscs,sscs_bulkscan,cmc,cmc_claim_store,cmc_claim_external_api,jui_webapp,pui_webapp,bulk_scan_orchestrator,fpl_case_service,iac,finrem_ccd_data_migrator,finrem_case_orchestration,employment_tribunals,ethos_repl_service,ccpay_bubble,ctsc_work_allocation,em_ccd_orchestrator,xui_webapp,bulk_scan_payment_processor,pcq_consolidation_service,em_npa_app,ecm_consumer,aac_manage_case_assignment,unspec_service,divorce_frontend,wa_task_configuration_api,wa_task_monitor,ccd_case_document_am_api,hmc_cft_hearing_service,prl_citizen_frontend,prl_cos_api,et_cos,et_msg_handler,ccd_next_hearing_date_updater,et_sya_api,sptribs_case_api,civil_general_applications,fis_ds_update_web,pcs_api,pcs_frontend"
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_DATA_NODES_HOSTS: "http://{{ .Release.Name }}-es-master:9200"
        ELASTIC_SEARCH_HOSTS: "http://{{ .Release.Name }}-es-master:9200"
      secrets:
        DATA_STORE_DB_PASSWORD:
          key: password
          disabled: false
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}
      autoscaling:
        enabled: false
        maxReplicas: 1
      keyVaults:
        ccd:
          secrets:
            - name: ccd-data-s2s-secret
              alias: idam.s2s-auth.totp_secret
            - name: idam-data-store-client-secret
              alias: IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET
            - name: idam-data-store-system-user-username
              alias: IDAM_DATA_STORE_SYSTEM_USER_USERNAME
            - name: idam-data-store-system-user-password
              alias: IDAM_DATA_STORE_SYSTEM_USER_PASSWORD
  ccd-api-gateway-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/api-gateway-web:latest
      imagePullPolicy: Always
      environment:
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
        ALLOW_CONFIG_MUTATIONS: true
      ingressHost: gateway-${SERVICE_FQDN}
      keyVaults:
        ccd:
          secrets:
            - ccd-api-gateway-oauth2-client-secret
            - postcode-info-address-lookup-token
            - microservicekey-ccd-gw
  ccd-admin-web:
    nodejs:
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      environment:
        ADMINWEB_GLOBAL_SEARCH_INDEX_URL: http://${SERVICE_NAME}-ccd-definition-store/elastic-support/global-search/index
        ADMINWEB_ELASTIC_CASE_TYPES_URL: http://${SERVICE_NAME}-ccd-definition-store/elastic-support/case-types
        ALLOW_CONFIG_MUTATIONS: true
      keyVaults:
        ccd:
          secrets:
            - microservicekey-ccd-admin
            - ccd-admin-web-oauth2-client-secret
  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    replicas: 1
    minimumMasterNodes: 1
    antiAffinity: "soft"
    esJavaOpts: "-Xmx512m -Xms512m"
    # Their tests delete the pod after succeeding, we pass --logs to the test command which fail if the pod has already been deleted
    # The tests do pass, at least as of 2023-01-19
    tests:
      enabled: false
    extraEnvs:
      - name: discovery.type
        value: single-node
      - name: cluster.initial_master_nodes
        value: ""
      - name: action.auto_create_index
        value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
    persistence:
      enabled: false
    ingress:
      enabled: false
      className: traefik
      # hosts:
      #   - host: es-${SERVICE_FQDN}
      #     paths:
      #       - path: /
  logstash:
    image: "hmctspublic.azurecr.io/imported/logstash/logstash"
    imageTag: "7.16.1"
    imagePullPolicy: "IfNotPresent"
    logstashJavaOpts: "-Xmx1g -Xms512M"
    extraInitContainers: |
      - name: download-postgres-jdbc
        image: hmctspublic.azurecr.io/curl:7.70.0
        command: ['curl', '-L', 'https://jdbc.postgresql.org/download/postgresql-42.2.18.jar', '-o', '/logstash-lib/postgresql.jar']
        volumeMounts:
        - name: logstash-lib
          mountPath: /logstash-lib
    extraVolumes: |
      - name: logstash-lib
        emptyDir: {}
    extraVolumeMounts: |
      - name: logstash-lib
        mountPath: /usr/share/logstash/ccd
    logstashConfig:
      logstash.yml: |
        http.host: 0.0.0.0
        xpack.monitoring.enabled: false
        xpack.monitoring.elasticsearch.hosts: ["http://{{ .Release.Name }}-es:9200"]
        queue.type: persisted
        dead_letter_queue.enable: true
      pipelines.yml: |
        - pipeline.id: main
          path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
          queue.type: persisted
    logstashPipeline:
      01_input.conf: |
        input  {
          jdbc {
            jdbc_connection_string => "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/javadatabase?stringtype=unspecified"
            jdbc_user => "javapostgres"
            jdbc_password => "javapassword"
            jdbc_validate_connection => true
            jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
            jdbc_driver_class => "org.postgresql.Driver"
            jdbc_default_timezone => "UTC"
            statement => "UPDATE case_data SET marked_by_logstash = true WHERE marked_by_logstash = false RETURNING id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data"
            clean_run => false
            schedule => "* * * * * *"
          }
        }
      02_filter.conf: |
        filter{
          json{
              source => "json_data"
              target => "data"
              remove_field => ["json_data"]
              }
              json{
                  source => "json_supplementary_data"
                  target => "supplementary_data"
                  remove_field => ["json_supplementary_data"]
              }
              json{
                  source => "json_data_classification"
                  target => "data_classification"
                  remove_field => ["json_data_classification"]
              }
              if [data][SearchCriteria] {
                  clone {
                      clones => ["SearchCriteria"]
                  }
              }
              if [type] == "SearchCriteria" {
                  if [data][SearchCriteria] {
                      mutate {
                        rename => {"[data][SearchCriteria]" => "[data_new][SearchCriteria]" }
                      }
                  }
                  if [data][caseManagementLocation] {
                      mutate {
                        rename => {"[data][caseManagementLocation]" => "[data_new][caseManagementLocation]" }
                      }
                  }
                  if [data][CaseAccessCategory] {
                    mutate {
                        rename => {"[data][CaseAccessCategory]" => "[data_new][CaseAccessCategory]" }
                    }
                  }
                  if [data][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data][caseNameHmctsInternal]" => "[data_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data][caseManagementCategory] {
                      mutate {
                        rename => {"[data][caseManagementCategory]" => "[data_new][caseManagementCategory]" }
                      }
                  }
                  if [supplementary_data][HMCTSServiceId] {
                      mutate {
                        rename => {"[supplementary_data][HMCTSServiceId]" => "[supplementary_data_new][HMCTSServiceId]" }
                      }
                  }
                  if [data_classification][SearchCriteria] {
                      mutate {
                        rename => {"[data_classification][SearchCriteria]" => "[data_classification_new][SearchCriteria]" }
                      }
                  }
                  if [data_classification][CaseAccessCategory] {
                    mutate {
                          rename => {"[data_classification][CaseAccessCategory]" => "[data_classification_new][CaseAccessCategory]" }
                    }
                  }
                  if [data_classification][caseManagementLocation] {
                    mutate {
                        rename => {"[data_classification][caseManagementLocation]" => "[data_classification_new][caseManagementLocation]" }
                    }
                  }
                  if [data_classification][caseNameHmctsInternal] {
                      mutate {
                        rename => {"[data_classification][caseNameHmctsInternal]" => "[data_classification_new][caseNameHmctsInternal]" }
                      }
                  }
                  if [data_classification][caseManagementCategory] {
                      mutate {
                        rename => {"[data_classification][caseManagementCategory]" => "[data_classification_new][caseManagementCategory]" }
                      }
                  }
                  mutate { remove_field =>[ "data" ,"supplementary_data", "data_classification", "last_state_modified_date", "type","last_modified", "created_date" ] }
                  mutate {
                          rename => { "[data_new]" => "data" }
                          rename => { "[supplementary_data_new]"  => "supplementary_data" }
                          rename => { "[data_classification_new]"  => "data_classification" }
                  }
                  mutate {
                    add_field => { "index_id" => "global_search" }
                  }
                  mutate {
                    lowercase => [ "index_id" ]
                  }
              } else {
                  mutate {
                      add_field => { "index_id" => "%{case_type_id}_cases" }
                }
              mutate {
                lowercase => [ "index_id" ]
              }
              }
        }
      03_output.conf: |
        output {
            elasticsearch {
                hosts => ["http://{{ .Release.Name }}-es:9200"]
                sniffing => false
                index => "%{[index_id]}"
                document_type => "_doc"
                document_id => "%{id}"
                timeout => 60
            }
        }
xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    devmemoryRequests: 500Mi
    devcpuRequests: 500m
    devmemoryLimits: 1Gi
    devcpuLimits: 1
    environment:
      HEALTH_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw/health
      HEALTH_CCD_DATA_API: http://${SERVICE_NAME}-ccd-data-store-api/health
      HEALTH_TERMS_AND_CONDITIONS_API: http://xui-terms-and-conditions-aat.service.core-compute-aat.internal/health
      SERVICES_CCD_COMPONENT_API: http://${SERVICE_NAME}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: http://${SERVICE_NAME}-ccd-data-store-api
      SERVICES_TERMS_AND_CONDITIONS: http://xui-terms-and-conditions-aat.service.core-compute-aat.internal
      SERVICES_HEARINGS_COMPONENT_API: http://jurisdiction-hearings-api-aat.service.core-compute-aat.internal
      JURISDICTIONS: CIVIL
      FEATURE_REDIS_ENABLED: false
      REDISCLOUD_URL: http://dummyrediscloudurl
      FEATURE_APP_INSIGHTS_ENABLED: false
      FEATURE_SECURE_COOKIE_ENABLED: false
      FEATURE_HELMET_ENABLED: false
      FEATURE_OIDC_ENABLED: false
      FEATURE_ACCESS_MANAGEMENT_ENABLED: true
      PROTOCOL: http
      PREVIEW_DEPLOYMENT_ID: "pcs-${CHANGE_ID}"
      LAUNCH_DARKLY_CLIENT_ID: 645baeea2787d812993d9d70
    keyVaults:
      rpx:
        resourceGroup: rpx
        secrets:
          - mc-s2s-client-secret
          - mc-idam-client-secret
          - system-user-name
          - system-user-password

