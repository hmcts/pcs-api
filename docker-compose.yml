services:
  pcs-api:
    build:
      context: .
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    image: hmctspublic.azurecr.io/pcs/api
    environment:
      # these environment variables are used by java-logging library
      - ROOT_APPENDER
      - JSON_CONSOLE_PRETTY_PRINT
      - ROOT_LOGGING_LEVEL
      - REFORM_SERVICE_TYPE
      - REFORM_SERVICE_NAME
      - REFORM_TEAM
      - REFORM_ENVIRONMENT
      - LOGBACK_DATE_FORMAT
      - LOGBACK_REQUIRE_THREAD
      - LOGBACK_REQUIRE_ALERT_LEVEL=false
      - LOGBACK_REQUIRE_ERROR_CODE=false
      - PCS_DB_HOST=pcs-api-db
      - PCS_DB_NAME=${POSTGRES_DB}
      - PCS_DB_USER_NAME=${POSTGRES_USER}
      - PCS_DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT}
      - IDAM_S2S_AUTH_URL=http://service-auth-provider-api:${SERVICE_AUTH_PORT}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      pcs-api-db:
        condition: service_healthy
      service-auth-provider-api:
        condition: service_started

  pcs-api-db:
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - pcs-api-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 1s
      retries: 5

  service-auth-provider-api:
    image: "hmctspublic.azurecr.io/rpe/service-auth-provider:latest"
    ports:
      - "${SERVICE_AUTH_PORT}:${SERVICE_AUTH_PORT}"
    environment:
      SERVER_PORT: ${SERVICE_AUTH_PORT}
      AUTH_PROVIDER_SERVICE_SERVER_JWT_KEY: ${AUTH_PROVIDER_SERVICE_SERVER_JWT_KEY}


volumes:
  pcs-api-db-data:
