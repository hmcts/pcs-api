#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 07 * * 1-5')])
])

@Library("Infrastructure")

def type = "java"
def product = "pcs"
def component = "api"

static Map<String, Object> secret(String secretName, String envVariable) {
  [$class     : 'AzureKeyVaultSecret',
    secretType : 'Secret',
    name       : secretName,
    envVariable: envVariable
  ]
}

def secrets = [
  'pcs-${env}': [
    secret('pcs-api-idam-secret', 'PCS_API_IDAM_SECRET'),
    secret('idam-system-user-name', 'IDAM_SYSTEM_USERNAME'),
    secret('idam-system-user-password', 'IDAM_SYSTEM_USER_PASSWORD'),
    secret('pcs-idam-test-user-password', 'PCS_IDAM_TEST_USER_PASSWORD'),
    secret('pcs-caseworker-username', 'PCS_CASEWORKER_USERNAME'),
    secret('pcs-caseworker-password', 'PCS_CASEWORKER_PASSWORD'),
  ]
]

withNightlyPipeline(type, product, component) {
    enableSlackNotifications('#pcs-tech')
    loadVaultSecrets(secrets)
    afterAlways('DependencyCheckNightly') {
    env.MANAGE_CASE_BASE_URL = "https://manage-case.aat.platform.hmcts.net/"
    runE2ETestsForBrowser('Chrome')
  }
}

def runE2ETestsForBrowser(String browser) {
  stage("Full E2E Test - ${browser}") {
    try {
      sh "./gradlew runE2e${browser}Tests"
    } catch (Error) {
      unstable(message: "${STAGE_NAME} is unstable: " + Error.toString())
    } finally {
      publishHTML([
        allowMissing: true,
        alwaysLinkToLastBuild: true,
        keepAll: true,
        reportDir: "src/e2eTest/allure-report",
        reportFiles: 'index.html',
        reportName: "Full EXUI E2E Test Report"
      ])
    }
  }
}
